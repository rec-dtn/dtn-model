import numpy as np
import pandas as pd
from collections import defaultdict
import args
import os


def join_data(file1, file2, write_file, sample_size):
    sample_list = []
    common_logs = defaultdict(lambda: '')
    file = open(write_file, 'w')

    print("begin push sample_list!")
    with open(file1, 'r') as f:
        for i, line in enumerate(f):
            try:
                sample_list.append(line)
            except:
                continue

    print("begin push common_logs!")
    with open(file2, 'r') as f:
        for i, line in enumerate(f):
            try:
                common_feature_index, sample_str = line.strip().split('\t')
                common_logs[common_feature_index] = sample_str
            except:
                continue

    print("begin join data!")
    for i, sample in enumerate(sample_list):
        try:
            common_feature_index, sample_str = sample.strip().split('\t')
            common_str = common_logs.get(common_feature_index)
            if common_str:
                sample = "{0},{1}".format(sample_str, common_str)
            else:
                sample = "{0}".format(sample_str)
            file.write(sample + "\n")
        except:
            continue
        if (i == sample_size):
            break

    print("join data successfully!")


def join_data2(file1, file2, write_file, sample_size, all_field_id):
    sample_list = []
    common_logs = defaultdict(lambda: '')
    file = open(write_file, 'w')

    print("begin push sample_list!")
    with open(file1, 'r') as f:
        for i, line in enumerate(f):
            try:
                sample_list.append(line)
            except:
                continue

    print("begin push common_logs!")
    with open(file2, 'r') as f:
        for i, line in enumerate(f):
            try:
                common_feature_index, sample_str = line.strip().split('\t')
                common_logs[common_feature_index] = sample_str
            except:
                continue

    print("begin join data!")
    all_field_feats = defaultdict(set)
    padding = 0
    for i, sample in enumerate(sample_list):
        try:
            common_feature_index, sample_str = sample.strip().split('\t')
            common_str = common_logs.get(common_feature_index)
            if common_str:
                sample = "{0},{1}".format(sample_str, common_str)
            else:
                sample = "{0}".format(sample_str)
            # 2,0,0,210:9109732,210:9046284,210:9099035,210:9046540,210:9104107,216:9188757,301:9351665,205:4186855,206:8316676,207:8482726,121:3438658,122:3438762,101:31390,124:3438769,125:3438774,127:3438782,128:3864885,129:3864887,150_14:3877938,150_14:3905530,150_14:3896610,150_14:3955084,150_14:3959861,150_14:3876023,150_14:3955852,150_14:3939255,150_14:3868485,150_14:3926325,150_14:3879335,150_14:3876776,150_14:3876640,150_14:3937123,150_14:3871211,150_14:3917411,150_14:3913794,150_14:3921051,150_14:3940182,150_14:3878700,150_14:3954498,150_14:3951896,150_14:3949182,150_14:3916684,150_14:3936704,150_14:3871205,150_14:3955376,150_14:3870598,150_14:3875384,150_14:3881307,150_14:3932081,150_14:3957047,150_14:3926166,150_14:3902080,150_14:3936545,150_14:3934001,150_14:3962271,150_14:3924200,150_14:3902078,150_14:3961641,150_14:3950991,150_14:3944058,150_14:3942726,150_14:3888380,150_14:3890486,150_14:3906812,150_14:3920752,150_14:3948710,150_14:3875825,150_14:3930063,150_14:3882430,150_14:3901391,150_14:3949790,150_14:3875785,150_14:3955869,150_14:3946723,150_14:3964136,150_14:3931611,150_14:3880069,150_14:3894314,150_14:3946646,150_14:3924077,150_14:3939127,150_14:3953460,150_14:3898852,150_14:3879888,150_14:3923356,150_14:3944536,150_14:3892713,150_14:3911756,150_14:3952683,150_14:3943656,150_14:3898071,150_14:3929082,150_14:3937819,150_14:3905762,150_14:3955358,150_14:3902279,150_14:3933941,150_14:3878872,150_14:3904380,150_14:3964080,150_14:3926234,150_14:3935864,150_14:3884282,150_14:3890467,150_14:3942881,150_14:3888626,150_14:3950750,150_14:3938664,150_14:3900694,150_14:3908591,150_14:3928289,150_14:3930564,150_14:3874640,150_14:3907724,150_14:3925164,150_14:3933013,150_14:3955302,150_14:3872016,150_14:3958068,150_14:3933908,150_14:3925205,150_14:3882994,150_14:3907729,150_14:3936945,150_14:3876422,150_14:3921264,150_14:3868124,150_14:3915256,150_14:3918569,150_14:3897916,150_14:3874814,150_14:3867742,150_14:3951181,150_14:3901952,150_14:3917942,150_14:3866299,150_14:3887856,150_14:3895764,150_14:3938608,150_14:3949135,150_14:3914634,150_14:3911327,150_14:3869347,150_14:3895307,150_14:3954853,150_14:3896511,150_14:3880954,150_14:3907939,150_14:3875600,150_14:3896202,150_14:3889506,150_14:3960349,150_14:3887264,150_14:3890077,150_14:3921478,150_14:3891954,150_14:3960470,150_14:3948094,150_14:3908296,150_14:3911204,150_14:3953957,150_14:3867168,150_14:3900909,150_14:3873200,150_14:3956724,150_14:3957295,150_14:3953555,150_14:3926598,150_14:3934602,150_14:3932631,150_14:3922369,150_14:3926305,150_14:3961366,150_14:3892303,150_14:3941754,150_14:3887520,150_14:3910769,150_14:3916487,150_14:3949641,150_14:3883102,150_14:3881344,150_14:3868054,150_14:3897449,150_14:3871500,150_14:3881959,150_14:3927343,150_14:3931750,150_14:3937847,150_14:3925325,150_14:3907647,150_14:3881913,150_14:3926316,150_14:3933670,150_14:3894265,150_14:3913784,150_14:3915291,150_14:3940678,150_14:3866902,150_14:3892926,150_14:3868495,150_14:3909315,150_14:3950658,150_14:3870933,150_14:3947981,150_14:3957716,150_14:3910026,150_14:3912301,150_14:3911728,150_14:3941161,127_14:3534361,127_14:3654192,127_14:3503151,127_14:3722909,127_14:3650730,127_14:3764544,127_14:3569054,127_14:3724845,127_14:3497157,127_14:3496264,127_14:3527335,127_14:3679309,127_14:3443460,127_14:3730931,127_14:3472446,127_14:3569659,127_14:3696666,127_14:3508200,127_14:3498424,127_14:3512516,127_14:3438924,127_14:3763509,127_14:3481257,127_14:3696626,127_14:3836652,127_14:3670130,127_14:3532120,127_14:3451613,127_14:3566907,127_14:3453730,127_14:3541548,127_14:3532524,127_14:3568262,127_14:3652338,127_14:3801737,127_14:3780771,127_14:3599945,127_14:3684225,127_14:3587627,127_14:3450514,127_14:3524438,127_14:3528279,127_14:3583906,127_14:3831319,127_14:3635803,127_14:3717570,127_14:3801207,127_14:3462486,127_14:3672690,127_14:3523928,127_14:3778434,127_14:3854389,127_14:3745924,127_14:3550466,127_14:3578761,127_14:3548329,127_14:3585186,127_14:3861107,127_14:3449486,127_14:3759399,127_14:3448440,127_14:3470791,127_14:3581302,127_14:3682988,127_14:3793499,127_14:3595782,127_14:3765301,127_14:3447825,127_14:3618723,127_14:3744331,127_14:3486731,127_14:3657978,127_14:3668480,127_14:3616364,127_14:3703415,127_14:3496263,127_14:3764479,127_14:3804677,127_14:3617974,127_14:3458472,127_14:3577863,127_14:3740569,127_14:3645775,127_14:3603145,127_14:3852956,127_14:3471530,127_14:3538295,127_14:3664583,127_14:3447852,127_14:3783309,127_14:3477217,127_14:3501829,127_14:3465417,127_14:3842656,127_14:3812943,127_14:3477079,127_14:3576993,127_14:3863902,127_14:3735411,127_14:3565927,127_14:3577893,127_14:3858194,127_14:3488974,127_14:3856639,127_14:3769975,127_14:3800113,127_14:3490323,127_14:3752993,127_14:3585280,127_14:3539414,127_14:3668453,127_14:3609640,127_14:3577230,127_14:3510767,127_14:3704267,127_14:3705637,127_14:3790389,127_14:3628932,127_14:3513627,127_14:3707674,127_14:3570289,127_14:3482895,127_14:3486924,127_14:3441975,127_14:3517261,127_14:3701447,127_14:3563441,127_14:3590099,127_14:3581704,127_14:3544108,127_14:3496850,127_14:3567215,127_14:3676585,127_14:3803792,127_14:3683686,127_14:3497919,127_14:3452495,127_14:3672330,127_14:3488502,127_14:3675629,127_14:3584168,127_14:3593539,127_14:3697881,127_14:3837541,127_14:3587310,127_14:3543185,127_14:3781041,127_14:3689720,127_14:3455594,127_14:3451411,127_14:3669716,127_14:3452633,127_14:3752696,127_14:3604628,127_14:3678491,127_14:3507300,127_14:3576309,127_14:3467873,127_14:3513206,127_14:3564965,127_14:3675360,127_14:3769277,127_14:3563465,127_14:3644979,127_14:3858315,127_14:3591829,127_14:3727426,127_14:3516135,127_14:3547742,127_14:3490593,127_14:3599662,127_14:3555485,127_14:3574852,127_14:3587983,127_14:3785653,127_14:3823422,127_14:3773075,127_14:3592462,127_14:3689963,127_14:3526805,127_14:3745867,127_14:3579962,127_14:3564873,127_14:3522145,127_14:3821139,127_14:3600715,127_14:3676255,127_14:3693566,127_14:3566166,127_14:3544067,127_14:3788715,127_14:3712607,127_14:3507269,127_14:3752937,127_14:3539664,127_14:3819058,127_14:3507270,127_14:3599883,127_14:3763920,127_14:3683478,127_14:3739512,127_14:3521445,127_14:3569269,127_14:3573322,127_14:3582709,127_14:3588075,127_14:3770653,127_14:3544840,127_14:3812616,109_14:449089,109_14:449167,109_14:450954,109_14:450656,109_14:450657,109_14:449210,109_14:452835,109_14:450271,109_14:449100,109_14:451204,109_14:451205,109_14:452505,109_14:451307,109_14:450005,109_14:450269,109_14:449083,109_14:445017,109_14:450174,109_14:455119,109_14:452016,109_14:451998,109_14:445398,109_14:456784,109_14:449082,109_14:449341,109_14:449081,109_14:451995,109_14:446408,109_14:449077,109_14:449626,109_14:451252,109_14:447093,109_14:445779,109_14:451124,109_14:450881,109_14:453478,109_14:449222,109_14:451248,109_14:453477,109_14:456195,109_14:445083,109_14:445713,109_14:450658,109_14:450659,109_14:449601,109_14:450948,109_14:455434,109_14:445660,109_14:446412,109_14:456468,109_14:449308,109_14:454689,109_14:451033,109_14:452394,109_14:449056,109_14:450879,109_14:453476,109_14:451118,109_14:455959,109_14:450877,109_14:449079,109_14:450876,109_14:450276,109_14:451099,109_14:445560,109_14:449078,109_14:451232,109_14:449312,109_14:455384,109_14:451448,109_14:451116,109_14:451447,109_14:445357,109_14:446451,109_14:453654,109_14:451243,109_14:451244,109_14:452489,109_14:451883,109_14:451115,109_14:451881,109_14:451639,109_14:451641,109_14:449300,109_14:452880,109_14:449297,109_14:456055,109_14:456054,109_14:446414,109_14:451877,109_14:451238,109_14:451239,109_14:446056,109_14:451112,109_14:450300,109_14:450989,109_14:449087,109_14:451636,109_14:450756,109_14:450068,109_14:450067,109_14:456653,109_14:456066,109_14:449311,109_14:445647,109_14:451822,109_14:446872,109_14:449080,109_14:450995,109_14:447079,109_14:453780,109_14:451213,109_14:445481,109_14:455766,109_14:456072,109_14:449360,109_14:449068,110_14:2419331,110_14:1041262,110_14:947296,110_14:525394,110_14:3426775,110_14:1556934,110_14:1877524,110_14:2347158,110_14:2969673,110_14:738369,110_14:3307878,110_14:2226069,110_14:1998800,110_14:2626251,110_14:2394661,110_14:1072658,110_14:977965,110_14:2778086,110_14:1851306,110_14:3323013,110_14:2621086,110_14:2297435,110_14:2469570,110_14:1885041,110_14:906579,110_14:2740424,110_14:1168661,110_14:3155380,110_14:1014707,110_14:3245243,110_14:2315428,110_14:1079629,110_14:1560150,110_14:2389201,110_14:742601,110_14:3002795,110_14:3375444,110_14:496603,110_14:2979442,110_14:2918879,110_14:786670,110_14:3243073,110_14:2951430,110_14:1244302,110_14:556448,110_14:1734033,110_14:890105,110_14:876342,110_14:568175,110_14:710148,110_14:598619,110_14:1806965,110_14:2917241,110_14:3089619,110_14:2421025,110_14:1394016,110_14:1131631,110_14:2685114,110_14:670618,110_14:1190370,110_14:2053586,110_14:2823003,110_14:636201,110_14:2853377,110_14:509316,110_14:1262890,110_14:1730134,110_14:1301783,110_14:2358050,110_14:3268590,110_14:2453411,110_14:2715067,110_14:3192174,110_14:3364461,110_14:2423908,110_14:3011548,110_14:2892737,110_14:3166407,110_14:2850374,110_14:2069568,110_14:926589,110_14:1019570,110_14:3329821,110_14:2779692,110_14:2120498,110_14:2953909,110_14:1053250,110_14:3281721,110_14:465372,110_14:2482086,110_14:1834738,110_14:2944044,110_14:3146213,110_14:2179944,110_14:754165,110_14:3310770,110_14:679068,110_14:2477350,110_14:2652847,110_14:569286,110_14:1065296,110_14:880215,110_14:2939869,110_14:1048811,110_14:3123736,110_14:765247,110_14:2394263,110_14:2390397,110_14:2787920,110_14:2947765,110_14:2970423,110_14:2384852,110_14:2643539,110_14:1871431,110_14:1030364,110_14:2503693,110_14:2809309,110_14:2943447,110_14:1123361,110_14:1366167,110_14:1168110,110_14:2596491,110_14:3332333,110_14:535369,110_14:1801699,110_14:2313170,110_14:2533495,110_14:2786946,110_14:1765108,110_14:3037403,110_14:1691318,110_14:1065359,110_14:3411782,110_14:3125303,110_14:3327324,110_14:619160,110_14:2940405,110_14:2159143,110_14:3285007,110_14:2814509,110_14:1066337,110_14:2083322,110_14:785828,110_14:2297396,110_14:1540173,110_14:1463834,110_14:2834875,110_14:3340510,110_14:2336784,110_14:2783599,110_14:2872126,110_14:1590961,110_14:3325910,110_14:2352121,110_14:2794029,110_14:652921,110_14:2358768,110_14:611132,110_14:3304913,110_14:1050920,110_14:521378,110_14:1286748,110_14:3194928,110_14:2749065,110_14:3051057,110_14:2463183,110_14:479380,110_14:2383493,110_14:2833557,110_14:757431,110_14:2048424,110_14:546421,110_14:779319,110_14:944155,110_14:2109664,110_14:1128675,110_14:2551463,110_14:813947,110_14:1639590,110_14:3181670,110_14:3180864,110_14:3091953,110_14:3025330,110_14:3202915,110_14:3123050,110_14:2584788,110_14:1050680,110_14:2858064,110_14:3151328,110_14:476714,110_14:1000215,110_14:2787065,110_14:3047167,110_14:3035964,110_14:664753,110_14:3119380,110_14:2933195,110_14:3079596,110_14:3403052,110_14:3073062,110_14:2368987,110_14:2661356,110_14:2849099,110_14:1001604,110_14:1496605,110_14:468664,110_14:2980082,110_14:3437145,110_14:1091059,110_14:3207584,110_14:2036276,110_14:905726,110_14:2766137,110_14:2326763,110_14:524273,110_14:2239768,110_14:1259282,110_14:3179510,110_14:2000398,110_14:1637606,110_14:2207389,110_14:3204420,110_14:2272803,110_14:3166073,110_14:639749,110_14:1860499,110_14:2418068,110_14:3303417,110_14:466016,110_14:2389128,110_14:2961808,110_14:888791,110_14:2819972,110_14:944760,110_14:2144557,110_14:3413485,110_14:2787986,110_14:1408678,110_14:2758405,110_14:3010991,110_14:3015053,110_14:3124416,110_14:2367911,110_14:782639,110_14:1100769,110_14:2781151,110_14:1545368,110_14:1539624,110_14:3231094,110_14:2320851,110_14:1291323,110_14:2455393,110_14:664218,110_14:1038744,110_14:1510832,110_14:722641,110_14:1447637,110_14:1103248,110_14:2966917,110_14:981985,110_14:2292119,110_14:2225497,110_14:3123967,110_14:806884,110_14:2573384,110_14:2221890,110_14:577976,110_14:912643,110_14:1115269,110_14:786450,110_14:3077043,110_14:2389840,110_14:1805172,110_14:1195199,110_14:2800729,110_14:2954523,110_14:3265626,110_14:1250095,110_14:1147664,110_14:3156870,110_14:2374917,110_14:2320466,110_14:2353493,110_14:847470,110_14:2882156,110_14:1038219,110_14:2945813,110_14:1163925,110_14:2243764,110_14:3180553,110_14:2413058,110_14:2494264,110_14:3191185,110_14:1906505,110_14:1138823,110_14:2376961,110_14:2750610,110_14:2935556,110_14:3312477,110_14:2421781,110_14:2161660,110_14:2130753,110_14:2329713,110_14:919609,110_14:567135,110_14:3168176,110_14:973834,110_14:2687174,110_14:2366489,110_14:1171127,110_14:2513864,110_14:3114818,110_14:2251535,110_14:2719961,110_14:2768560,110_14:2614551,110_14:2271476,110_14:3103239,110_14:3408392,110_14:2299336,110_14:641464,110_14:1119957,110_14:1010330,110_14:689321,110_14:1050333,110_14:1418537,110_14:2250845,110_14:2273243,110_14:645350,110_14:1091108,110_14:795971,110_14:2826981,110_14:2328996,110_14:1495970,110_14:2993393,110_14:2764588,110_14:2997533,110_14:2012693,110_14:728527,110_14:3288895,110_14:568260,110_14:569621
            sample_split = sample.split(',')
            sample_field_feat = defaultdict(list)
            for elem in sample_split[3:]:
                field_id, feat_id = elem.strip().split(':')
                # 统计各个特征域的特征集合
                all_field_feats[field_id].add(feat_id)
                # 统计当前样本中特征
                sample_field_feat[field_id].append(feat_id)
            field_feat_list = []
            for fi in all_field_id:
                if len(sample_field_feat[fi]) == 0:
                    feats = [str(padding)]
                else:
                    feats = sample_field_feat[fi]
                field_feat_list.append(fi + ':' + '#'.join(feats))
            file.write("{0},{1},{2},{3}".format(sample_split[0], sample_split[1], sample_split[2],
                                                ','.join(field_feat_list) + "\n"))
        except:
            continue
        if (i == sample_size):
            break

    print("join data successfully!")
    return all_field_feats


def read_data(file_name, write_file):
    file = open(write_file, 'w')
    print("begin to write!")
    with open(file_name, 'r') as f:
        for i, line in enumerate(f):
            try:
                line = line.strip().split(',')
                feat_len = len(line)
                feat_lists = []
                # common_feature_index|feat_num|feat_list
                if (feat_len == 3):
                    feat_strs = line[2]
                    for fstr in feat_strs.split('\x01'):
                        filed, feat_val = fstr.split('\x02')
                        feat, val = feat_val.split('\x03')
                        feat_lists.append('%s:%s' % (filed, feat))
                    common_feature = "{0}\t{1}".format(line[0], ','.join(feat_lists)) + "\n"
                    file.write(common_feature)

                # sample_id|y|z|common_feature_index|feat_num|feat_list
                elif (feat_len == 6):
                    # y=0 & z=1 filter
                    if (line[1] == '0' and line[2] == '1'):
                        continue
                    feat_strs = line[5]
                    for fstr in feat_strs.split('\x01'):
                        filed, feat_val = fstr.split('\x02')
                        feat, val = feat_val.split('\x03')
                        feat_lists.append('%s:%s' % (filed, feat))
                    sample = "{0}\t{1},{2},{3},{4}".format(line[3], line[0], line[1], line[2],
                                                           ','.join(feat_lists)) + "\n"
                    file.write(sample)
            except:
                continue

    file.close()


def recode(file_path, writh_file, vocab_path):
    all_feat_id_dict = defaultdict(int)
    file1 = open(writh_file[0], 'w')
    file2 = open(writh_file[1], 'w')
    vocab_file = open(vocab_path, 'w')
    id = 0
    with open(file_path[0], "r") as f:
        for i, line in enumerate(f):
            line = line.strip().split(',')
            feat_lists = []
            for elem in line[3:]:
                field_id, feat_id = elem.strip().split(':')
                if feat_id not in all_feat_id_dict:
                    id += 1
                    all_feat_id_dict[feat_id] = id
                feat_lists.append('%s:%s' % (field_id, all_feat_id_dict[feat_id]))
            sample = "{0},{1},{2},{3}".format(line[0], line[1], line[2], ','.join(feat_lists)) + "\n"
            file1.write(sample)
    with open(file_path[1], "r") as f:
        for i, line in enumerate(f):
            line = line.strip().split(',')
            feat_lists = []
            for elem in line[3:]:
                field_id, feat_id = elem.strip().split(':')
                if feat_id not in all_feat_id_dict:
                    id += 1
                    all_feat_id_dict[feat_id] = id
                feat_lists.append('%s:%s' % (field_id, all_feat_id_dict[feat_id]))
            sample = "{0},{1},{2},{3}".format(line[0], line[1], line[2], ','.join(feat_lists)) + "\n"
            file2.write(sample)
    vocab_size = len(all_feat_id_dict)
    vocab_file.write(str(vocab_size))
    file1.close()
    file2.close()
    vocab_file.close()


def recode2(file_path, writh_file, vocab_path):
    all_field_id = [
        '101', '109_14', '110_14', '127_14', '150_14', '121', '122', '124',
        '125', '126', '127', '128', '129', '205', '206', '207', '210',
        '216', '508', '509', '702', '853', '301'
    ]
    all_feat_id_dict = defaultdict(int)
    file1 = open(writh_file[0], 'w')
    file2 = open(writh_file[1], 'w')
    vocab_file = open(vocab_path, 'w')
    id = 0
    with open(file_path[0], "r") as f:
        for i, line in enumerate(f):
            line = line.strip().split(',')
            padding = 0
            feat_lists = []
            all_field_feats = defaultdict(list)
            for elem in line[3:]:
                # 210:1232,210:34211,310:2415
                field_id, feat_id = elem.strip().split(':')
                if feat_id not in all_feat_id_dict:
                    id += 1
                    all_feat_id_dict[feat_id] = id
                feat_lists.append('%s:%s' % (field_id, all_feat_id_dict[feat_id]))
                all_field_feats[field_id].append(str(all_feat_id_dict[feat_id]))
            field_feat_list = []
            for fi in all_field_id:
                if len(all_field_feats[fi]) == 0:
                    feats = [str(padding)]
                else:
                    feats = all_field_feats[fi]
                field_feat_list.append('#'.join(feats))
            sample = "{0},{1},{2},{3}".format(line[0], line[1], line[2], ','.join(field_feat_list)) + "\n"
            file1.write(sample)
    with open(file_path[1], "r") as f:
        for i, line in enumerate(f):
            line = line.strip().split(',')
            padding = 0
            feat_lists = []
            all_field_feats = defaultdict(list)
            for elem in line[3:]:
                field_id, feat_id = elem.strip().split(':')
                if feat_id not in all_feat_id_dict:
                    id += 1
                    all_feat_id_dict[feat_id] = id
                feat_lists.append('%s:%s' % (field_id, all_feat_id_dict[feat_id]))
                all_field_feats[field_id].append(str(all_feat_id_dict[feat_id]))
            field_feat_list = []
            for fi in all_field_id:
                if len(all_field_feats[fi]) == 0:
                    feats = [str(padding)]
                else:
                    feats = all_field_feats[fi]
                field_feat_list.append('#'.join(feats))
            sample = "{0},{1},{2},{3}".format(line[0], line[1], line[2], ','.join(field_feat_list)) + "\n"
            file2.write(sample)

    print('vocab_size: %d' % id)
    vocab_size = len(all_feat_id_dict)
    vocab_file.write(str(vocab_size))
    file1.close()
    file2.close()
    vocab_file.close()


if __name__ == "__main__":
    # args = args.parse_args()

    all_field_id = [
        '101', '109_14', '110_14', '127_14', '150_14', '121', '122', '124',
        '125', '126', '127', '128', '129', '205', '206', '207', '210',
        '216', '508', '509', '702', '853', '301'
    ]

    train_data_path = 'train_data'
    test_data_path = 'test_data'
    vocab_path = 'vocab/'
    train_sample_size = 40000000
    test_sample_size = 40000000
    read_data(train_data_path + '/less_sample_train.csv', train_data_path + '/skeleton_train.csv')
    print("write skeleton_train.csv successfully")
    read_data(train_data_path + '/common_features_train.csv', train_data_path + '/features_train.csv')
    print("write features_train.csv successfully")

    skeleton_train_path = train_data_path + '/skeleton_train.csv'
    features_train_path = train_data_path + '/features_train.csv'

    write_file = train_data_path + '/train_data.csv'
    train_all_field_feats = join_data2(skeleton_train_path, features_train_path, write_file, train_sample_size,
                                       all_field_id)

    # os.system('rm -rf ' + skeleton_train_path)
    # os.system('rm -rf ' + features_train_path)

    # read_data(test_data_path + '/sample_skeleton_test.csv', test_data_path + '/skeleton_test.csv')
    # print("write skeleton_test.csv successfully")
    # read_data(test_data_path + '/common_features_test.csv', test_data_path + '/features_test.csv')
    # print("write features_test.csv successfully")

    # skeleton_test_path = test_data_path + '/skeleton_test.csv'
    # features_test_path = test_data_path + '/features_test.csv'

    # write_file = test_data_path + '/test_data.csv'
    # test_all_field_feats = join_data2(skeleton_test_path, features_test_path, write_file, test_sample_size,
    #                                   all_field_id)

    # os.system('rm -rf ' + skeleton_test_path)
    # os.system('rm -rf ' + features_test_path)

    # 把各特征域的特征值分别写到对应的文件中，作为后续TensorFlow训练的embedding索引文件
    for fi in all_field_id:
        with open('.vocab/vocab_' + fi, 'w') as file_writer:
            for feat in train_all_field_feats[fi]:
            # for feat in train_all_field_feats[fi].union(test_all_field_feats[fi]):
                file_writer.write("{0}".format(feat) + "\n")

    print("vocab has finish !")
    # file_path = [train_data_path + '/train_data.csv', test_data_path + '/test_data.csv']
    # write_file = [train_data_path + '/traindata.csv',test_data_path + '/testdata.csv']
    # recode(file_path,write_file,vocab_path)
    #
    # for file in file_path:
    #     os.system('rm -rf ' + file_path)
